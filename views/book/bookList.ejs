<!-- 검색창 -->
<div class="row mt-5 justify-content-end">
    <div class="col-6 col-md-4">
        <!-- 검색 키워드 -->
        <form name="frm">
            <div class="input-group">
                <input type="text" name="query" class="form-control" value="자바" />
                <button class="btn btn-success">검색</button>
            </div>
        </form>
        <!-- 검색 키워드 -->
    </div>
</div>

<hr>

<!-- 카카오 도서검색 결과를 출력할 공간 마련해둠 -->
<div class="row" id="list_book"></div>

<!-- 도서 목록 템플릿  
for문을 안쓰는 대신에 script태그로 묶어주고 내가 정한 타입을 적어서 내가 알아볼 수 있게 해줘
태그만 사용해도 되게 해줄게 대신에... -->
<!-- mustach -->
<script type="text/x-handlebars-template" id="temp-book">
    {{#each documents}}
    <div class="col-6 col-md-4 col-lg-2">
        <div class="card my-2">
            <div class="card-body">
                <!-- index는 하나의 속성으로 "2"와 같은 문자열로 명시되며, 반환 시 2로 반환됩니다. -->
                <img src="{{image thumbnail}}" index="{{@index}}" alt="도서이미지" style="cursor:pointer; width:80%">
                <div class="ellipsis mt-2">{{title}}</div>
            </div>
            <div class="card-footer" style="font-size: 0.9rem;">
                <div class="text-center">
                    {{format price}}
                    <span style="cursor: pointer; color: green">CART</span>
                </div>
            </div>
        </div>
        <%-include("bookModal.ejs") %>
    </div>
    {{/each}}
</script>

<!-- 이미지 클릭 이벤트 -->
<script>
    // #list_book 내부의 .card 안에 있는 이미지를 클릭하면 이벤트 발생
    $("#list_book").on("click", ".card img", function() {
        let index = $(this).attr("index") // this는 클릭된 .card img를 의미
        console.log(index);
        $(`#modal${index}`).modal("show")
    })
</script>


<!-- 이동 버튼 -->
<div class="text-center mt-2">
    <button class="btn btn-primary btn-sm px-5" id="prev">이전</button>
    <span id="page" class="px-3">1/10</span>
    <button class="btn btn-primary btn-sm px-5" id="next">다음</button>
</div>

<!-- 이동 버튼 | script -->
<script>
    let page = 1

    $("#next").on("click", () => {
        page++
        getList()
    })

    $("#prev").on("click", () => {
        page--
        getList()
    })
</script>


<!-- 도서 데이터 가져오기 | 카카오API -->
<script>
    Handlebars.registerHelper("image", function(thum) {
        if(thum) return thum
        else return "https://placehold.co/120x174"
    })
    Handlebars.registerHelper("format", function(price) {
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '원';
    })

    let query = $(frm.query).val()

    const getList = () => {
        // 사용자가 입력한 검색 키워드 사용
        console.log(`page=${page}, query=${query}`)

        // 아래 함수는 jQuery-1.12.0.js에서 제공하는 함수 이다.
        // $.ajax()는 비동기 통신 처리를 위한 함수 사용이다. - waiting이 있다.
        $.ajax({
            method: "GET",
            url: "https://dapi.kakao.com/v3/search/book?target=title",
            headers: { Authorization: "KakaoAK bf56a7a88829f13ba8fef4e0ed4c2aeb" },
            data : { query: query, page: page, size: 6}, // 파라미터로 넘어가는 값-노출
            
            dataType: "json", 
                success: function(data) {
                    console.log(data)
                    // 응답으로 받은 정보를 data가 쥐고 있다. data는 json 형식이다.
                    let temp = Handlebars.compile($("#temp-book").html())
                    $("#list_book").html(temp(data))

                    // 페이지 네비게이션 추가
                    let is_end = data.meta.is_end      // 마지막 페이지 여부
                    let total = data.meta.total_count  // 검색 가능한 데이터 수
                    let last = Math.ceil(total/6)      // 마지막 페이지
                    $("#page").html(`${page}/${last}`)

                    if(page === 1) $("#prev").attr("disabled", true)
                    else $("#prev").attr("disabled", false)

                    if(is_end) $("#next").attr(disabled, true)
                    else $("#next").attr("disabled", false)
                },
                error: function(error) {
                    console.log(error)
                }
        })
    }

    // 아래 함수를 주석으로 막으면 조회결과는 없다.
    getList()

    // 검색창에서 입력한 책 제목을 읽어오기
    $(frm).on("submit", (e) => {
        console.log("전송 호출")
        e.preventDefault()  // submit이슈 - 새로고침이 발생함.

        query = $(frm.query).val()  // 사용자가 입력한 책 제목
        page = 1    // 1페이지를 보여줘 - 페이징 처리
        getList()   // 도서 정보를 카카오 검색
    })
</script>
